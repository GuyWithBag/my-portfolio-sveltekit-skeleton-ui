import { SvelteComponentTyped } from "svelte";
declare const __propDef: {
    props: {
        [x: string]: any;
        /** Provide classes to set the tree width.*/
        width?: string | undefined;
        /** Provide classes to set the vertical spacing between items.*/
        spacing?: string | undefined;
        /** Provide classes to set the tree item padding styles.*/
        padding?: string | undefined;
        /** Provide classes to set the tree children indentation*/
        indent?: string | undefined;
        /** Provide classes to set the tree item hover styles.*/
        hover?: string | undefined;
        /** Provide classes to set the tree item rounded styles.*/
        rounded?: string | undefined;
        /** Set the rotation of the item caret in the open state.*/
        caretOpen?: string | undefined;
        /** Set the rotation of the item caret in the closed state.*/
        caretClosed?: string | undefined;
        hyphenOpacity?: string | undefined;
        /** Provide arbitrary classes to the tree item summary region.*/
        regionSummary?: string | undefined;
        /** Provide arbitrary classes to the symbol icon region.*/
        regionSymbol?: string | undefined;
        /** Provide arbitrary classes to the children region.*/
        regionChildren?: string | undefined;
        /** Provide the ARIA labelledby value.*/
        labelledby?: string | undefined;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {};
    };
};
export type TreeViewProps = typeof __propDef.props;
export type TreeViewEvents = typeof __propDef.events;
export type TreeViewSlots = typeof __propDef.slots;
export default class TreeView extends SvelteComponentTyped<TreeViewProps, TreeViewEvents, TreeViewSlots> {
}
export {};
